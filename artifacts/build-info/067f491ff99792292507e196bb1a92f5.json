{"id":"067f491ff99792292507e196bb1a92f5","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@semaphore-protocol/contracts/interfaces/ISemaphore.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\n/// @title Semaphore contract interface.\ninterface ISemaphore {\n    error Semaphore__CallerIsNotTheGroupAdmin();\n    error Semaphore__MerkleTreeDepthIsNotSupported();\n    error Semaphore__MerkleTreeRootIsExpired();\n    error Semaphore__MerkleTreeRootIsNotPartOfTheGroup();\n    error Semaphore__YouAreUsingTheSameNillifierTwice();\n\n    /// It defines all the group parameters, in addition to those in the Merkle tree.\n    struct Group {\n        address admin;\n        uint256 merkleTreeDuration;\n        mapping(uint256 => uint256) merkleRootCreationDates;\n        mapping(uint256 => bool) nullifierHashes;\n    }\n\n    /// @dev Emitted when an admin is assigned to a group.\n    /// @param groupId: Id of the group.\n    /// @param oldAdmin: Old admin of the group.\n    /// @param newAdmin: New admin of the group.\n    event GroupAdminUpdated(uint256 indexed groupId, address indexed oldAdmin, address indexed newAdmin);\n\n    /// @dev Emitted when the Merkle tree duration of a group is updated.\n    /// @param groupId: Id of the group.\n    /// @param oldMerkleTreeDuration: Old Merkle tree duration of the group.\n    /// @param newMerkleTreeDuration: New Merkle tree duration of the group.\n    event GroupMerkleTreeDurationUpdated(\n        uint256 indexed groupId,\n        uint256 oldMerkleTreeDuration,\n        uint256 newMerkleTreeDuration\n    );\n\n    /// @dev Emitted when a Semaphore proof is verified.\n    /// @param groupId: Id of the group.\n    /// @param merkleTreeRoot: Root of the Merkle tree.\n    /// @param externalNullifier: External nullifier.\n    /// @param nullifierHash: Nullifier hash.\n    /// @param signal: Semaphore signal.\n    event ProofVerified(\n        uint256 indexed groupId,\n        uint256 indexed merkleTreeRoot,\n        uint256 indexed externalNullifier,\n        uint256 nullifierHash,\n        uint256 signal\n    );\n\n    /// @dev Saves the nullifier hash to avoid double signaling and emits an event\n    /// if the zero-knowledge proof is valid.\n    /// @param groupId: Id of the group.\n    /// @param merkleTreeRoot: Root of the Merkle tree.\n    /// @param signal: Semaphore signal.\n    /// @param nullifierHash: Nullifier hash.\n    /// @param externalNullifier: External nullifier.\n    /// @param proof: Zero-knowledge proof.\n    function verifyProof(\n        uint256 groupId,\n        uint256 merkleTreeRoot,\n        uint256 signal,\n        uint256 nullifierHash,\n        uint256 externalNullifier,\n        uint256[8] calldata proof\n    ) external;\n\n    /// @dev Creates a new group. Only the admin will be able to add or remove members.\n    /// @param groupId: Id of the group.\n    /// @param depth: Depth of the tree.\n    /// @param admin: Admin of the group.\n    function createGroup(\n        uint256 groupId,\n        uint256 depth,\n        address admin\n    ) external;\n\n    /// @dev Creates a new group. Only the admin will be able to add or remove members.\n    /// @param groupId: Id of the group.\n    /// @param depth: Depth of the tree.\n    /// @param admin: Admin of the group.\n    /// @param merkleTreeRootDuration: Time before the validity of a root expires.\n    function createGroup(\n        uint256 groupId,\n        uint256 depth,\n        address admin,\n        uint256 merkleTreeRootDuration\n    ) external;\n\n    /// @dev Updates the group admin.\n    /// @param groupId: Id of the group.\n    /// @param newAdmin: New admin of the group.\n    function updateGroupAdmin(uint256 groupId, address newAdmin) external;\n\n    /// @dev Updates the group Merkle tree duration.\n    /// @param groupId: Id of the group.\n    /// @param newMerkleTreeDuration: New Merkle tree duration.\n    function updateGroupMerkleTreeDuration(uint256 groupId, uint256 newMerkleTreeDuration) external;\n\n    /// @dev Adds a new member to an existing group.\n    /// @param groupId: Id of the group.\n    /// @param identityCommitment: New identity commitment.\n    function addMember(uint256 groupId, uint256 identityCommitment) external;\n\n    /// @dev Adds new members to an existing group.\n    /// @param groupId: Id of the group.\n    /// @param identityCommitments: New identity commitments.\n    function addMembers(uint256 groupId, uint256[] calldata identityCommitments) external;\n\n    /// @dev Updates an identity commitment of an existing group. A proof of membership is\n    /// needed to check if the node to be updated is part of the tree.\n    /// @param groupId: Id of the group.\n    /// @param identityCommitment: Existing identity commitment to be updated.\n    /// @param newIdentityCommitment: New identity commitment.\n    /// @param proofSiblings: Array of the sibling nodes of the proof of membership.\n    /// @param proofPathIndices: Path of the proof of membership.\n    function updateMember(\n        uint256 groupId,\n        uint256 identityCommitment,\n        uint256 newIdentityCommitment,\n        uint256[] calldata proofSiblings,\n        uint8[] calldata proofPathIndices\n    ) external;\n\n    /// @dev Removes a member from an existing group. A proof of membership is\n    /// needed to check if the node to be removed is part of the tree.\n    /// @param groupId: Id of the group.\n    /// @param identityCommitment: Identity commitment to be removed.\n    /// @param proofSiblings: Array of the sibling nodes of the proof of membership.\n    /// @param proofPathIndices: Path of the proof of membership.\n    function removeMember(\n        uint256 groupId,\n        uint256 identityCommitment,\n        uint256[] calldata proofSiblings,\n        uint8[] calldata proofPathIndices\n    ) external;\n}\n"},"contracts/SemaphoreIdentity.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@semaphore-protocol/contracts/interfaces/ISemaphore.sol\";\r\n\r\ncontract SemaphoreIdentity {\r\n    string public message;\r\n\r\n    function Hello(string memory initialMessage) public {\r\n        message = initialMessage;\r\n    }\r\n\r\n    function setMessage(string memory newMessage) public {\r\n        message = newMessage;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@semaphore-protocol/contracts/interfaces/ISemaphore.sol":{"ast":{"absolutePath":"@semaphore-protocol/contracts/interfaces/ISemaphore.sol","exportedSymbols":{"ISemaphore":[160]},"id":161,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"31:22:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"55:41:0","text":"@title Semaphore contract interface."},"fullyImplemented":false,"id":160,"linearizedBaseContracts":[160],"name":"ISemaphore","nameLocation":"106:10:0","nodeType":"ContractDefinition","nodes":[{"id":4,"name":"Semaphore__CallerIsNotTheGroupAdmin","nameLocation":"129:35:0","nodeType":"ErrorDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"164:2:0"},"src":"123:44:0"},{"id":6,"name":"Semaphore__MerkleTreeDepthIsNotSupported","nameLocation":"178:40:0","nodeType":"ErrorDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"218:2:0"},"src":"172:49:0"},{"id":8,"name":"Semaphore__MerkleTreeRootIsExpired","nameLocation":"232:34:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"266:2:0"},"src":"226:43:0"},{"id":10,"name":"Semaphore__MerkleTreeRootIsNotPartOfTheGroup","nameLocation":"280:44:0","nodeType":"ErrorDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[],"src":"324:2:0"},"src":"274:53:0"},{"id":12,"name":"Semaphore__YouAreUsingTheSameNillifierTwice","nameLocation":"338:43:0","nodeType":"ErrorDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"381:2:0"},"src":"332:52:0"},{"canonicalName":"ISemaphore.Group","id":25,"members":[{"constant":false,"id":14,"mutability":"mutable","name":"admin","nameLocation":"507:5:0","nodeType":"VariableDeclaration","scope":25,"src":"499:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"merkleTreeDuration","nameLocation":"530:18:0","nodeType":"VariableDeclaration","scope":25,"src":"522:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"merkleRootCreationDates","nameLocation":"586:23:0","nodeType":"VariableDeclaration","scope":25,"src":"558:51:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":19,"keyType":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"558:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"nullifierHashes","nameLocation":"644:15:0","nodeType":"VariableDeclaration","scope":25,"src":"619:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":23,"keyType":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"619:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"638:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"Group","nameLocation":"483:5:0","nodeType":"StructDefinition","scope":160,"src":"476:190:0","visibility":"public"},{"anonymous":false,"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"672:193:0","text":"@dev Emitted when an admin is assigned to a group.\n @param groupId: Id of the group.\n @param oldAdmin: Old admin of the group.\n @param newAdmin: New admin of the group."},"id":34,"name":"GroupAdminUpdated","nameLocation":"876:17:0","nodeType":"EventDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"groupId","nameLocation":"910:7:0","nodeType":"VariableDeclaration","scope":34,"src":"894:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":true,"mutability":"mutable","name":"oldAdmin","nameLocation":"935:8:0","nodeType":"VariableDeclaration","scope":34,"src":"919:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32,"indexed":true,"mutability":"mutable","name":"newAdmin","nameLocation":"961:8:0","nodeType":"VariableDeclaration","scope":34,"src":"945:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"893:77:0"},"src":"870:101:0"},{"anonymous":false,"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"977:264:0","text":"@dev Emitted when the Merkle tree duration of a group is updated.\n @param groupId: Id of the group.\n @param oldMerkleTreeDuration: Old Merkle tree duration of the group.\n @param newMerkleTreeDuration: New Merkle tree duration of the group."},"id":43,"name":"GroupMerkleTreeDurationUpdated","nameLocation":"1252:30:0","nodeType":"EventDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"groupId","nameLocation":"1308:7:0","nodeType":"VariableDeclaration","scope":43,"src":"1292:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":false,"mutability":"mutable","name":"oldMerkleTreeDuration","nameLocation":"1333:21:0","nodeType":"VariableDeclaration","scope":43,"src":"1325:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"indexed":false,"mutability":"mutable","name":"newMerkleTreeDuration","nameLocation":"1372:21:0","nodeType":"VariableDeclaration","scope":43,"src":"1364:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1364:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:117:0"},"src":"1246:154:0"},{"anonymous":false,"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1406:290:0","text":"@dev Emitted when a Semaphore proof is verified.\n @param groupId: Id of the group.\n @param merkleTreeRoot: Root of the Merkle tree.\n @param externalNullifier: External nullifier.\n @param nullifierHash: Nullifier hash.\n @param signal: Semaphore signal."},"id":56,"name":"ProofVerified","nameLocation":"1707:13:0","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"indexed":true,"mutability":"mutable","name":"groupId","nameLocation":"1746:7:0","nodeType":"VariableDeclaration","scope":56,"src":"1730:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":48,"indexed":true,"mutability":"mutable","name":"merkleTreeRoot","nameLocation":"1779:14:0","nodeType":"VariableDeclaration","scope":56,"src":"1763:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"externalNullifier","nameLocation":"1819:17:0","nodeType":"VariableDeclaration","scope":56,"src":"1803:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"1803:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":false,"mutability":"mutable","name":"nullifierHash","nameLocation":"1854:13:0","nodeType":"VariableDeclaration","scope":56,"src":"1846:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":false,"mutability":"mutable","name":"signal","nameLocation":"1885:6:0","nodeType":"VariableDeclaration","scope":56,"src":"1877:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1720:177:0"},"src":"1701:197:0"},{"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"1904:406:0","text":"@dev Saves the nullifier hash to avoid double signaling and emits an event\n if the zero-knowledge proof is valid.\n @param groupId: Id of the group.\n @param merkleTreeRoot: Root of the Merkle tree.\n @param signal: Semaphore signal.\n @param nullifierHash: Nullifier hash.\n @param externalNullifier: External nullifier.\n @param proof: Zero-knowledge proof."},"functionSelector":"3bc778e3","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"2324:11:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"groupId","nameLocation":"2353:7:0","nodeType":"VariableDeclaration","scope":74,"src":"2345:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"merkleTreeRoot","nameLocation":"2378:14:0","nodeType":"VariableDeclaration","scope":74,"src":"2370:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"signal","nameLocation":"2410:6:0","nodeType":"VariableDeclaration","scope":74,"src":"2402:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"nullifierHash","nameLocation":"2434:13:0","nodeType":"VariableDeclaration","scope":74,"src":"2426:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"externalNullifier","nameLocation":"2465:17:0","nodeType":"VariableDeclaration","scope":74,"src":"2457:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"proof","nameLocation":"2512:5:0","nodeType":"VariableDeclaration","scope":74,"src":"2492:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_calldata_ptr","typeString":"uint256[8]"},"typeName":{"baseType":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"length":{"hexValue":"38","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2500:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"ArrayTypeName","src":"2492:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$8_storage_ptr","typeString":"uint256[8]"}},"visibility":"internal"}],"src":"2335:188:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2532:0:0"},"scope":160,"src":"2315:218:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"2539:207:0","text":"@dev Creates a new group. Only the admin will be able to add or remove members.\n @param groupId: Id of the group.\n @param depth: Depth of the tree.\n @param admin: Admin of the group."},"functionSelector":"9c112141","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"createGroup","nameLocation":"2760:11:0","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"groupId","nameLocation":"2789:7:0","nodeType":"VariableDeclaration","scope":84,"src":"2781:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"2781:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"depth","nameLocation":"2814:5:0","nodeType":"VariableDeclaration","scope":84,"src":"2806:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"admin","nameLocation":"2837:5:0","nodeType":"VariableDeclaration","scope":84,"src":"2829:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2771:77:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2857:0:0"},"scope":160,"src":"2751:107:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2864:290:0","text":"@dev Creates a new group. Only the admin will be able to add or remove members.\n @param groupId: Id of the group.\n @param depth: Depth of the tree.\n @param admin: Admin of the group.\n @param merkleTreeRootDuration: Time before the validity of a root expires."},"functionSelector":"65e54f83","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"createGroup","nameLocation":"3168:11:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"groupId","nameLocation":"3197:7:0","nodeType":"VariableDeclaration","scope":96,"src":"3189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"depth","nameLocation":"3222:5:0","nodeType":"VariableDeclaration","scope":96,"src":"3214:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"3214:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"admin","nameLocation":"3245:5:0","nodeType":"VariableDeclaration","scope":96,"src":"3237:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"merkleTreeRootDuration","nameLocation":"3268:22:0","nodeType":"VariableDeclaration","scope":96,"src":"3260:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:117:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"3305:0:0"},"scope":160,"src":"3159:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"3312:123:0","text":"@dev Updates the group admin.\n @param groupId: Id of the group.\n @param newAdmin: New admin of the group."},"functionSelector":"568ee826","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"updateGroupAdmin","nameLocation":"3449:16:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"groupId","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":104,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"newAdmin","nameLocation":"3491:8:0","nodeType":"VariableDeclaration","scope":104,"src":"3483:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3483:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3465:35:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[],"src":"3509:0:0"},"scope":160,"src":"3440:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"3516:153:0","text":"@dev Updates the group Merkle tree duration.\n @param groupId: Id of the group.\n @param newMerkleTreeDuration: New Merkle tree duration."},"functionSelector":"fcf0b6ec","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"updateGroupMerkleTreeDuration","nameLocation":"3683:29:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"groupId","nameLocation":"3721:7:0","nodeType":"VariableDeclaration","scope":112,"src":"3713:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"newMerkleTreeDuration","nameLocation":"3738:21:0","nodeType":"VariableDeclaration","scope":112,"src":"3730:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3712:48:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"3769:0:0"},"scope":160,"src":"3674:96:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"3776:149:0","text":"@dev Adds a new member to an existing group.\n @param groupId: Id of the group.\n @param identityCommitment: New identity commitment."},"functionSelector":"1783efc3","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"addMember","nameLocation":"3939:9:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"groupId","nameLocation":"3957:7:0","nodeType":"VariableDeclaration","scope":120,"src":"3949:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3949:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"identityCommitment","nameLocation":"3974:18:0","nodeType":"VariableDeclaration","scope":120,"src":"3966:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3966:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3948:45:0"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"4002:0:0"},"scope":160,"src":"3930:73:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"4009:150:0","text":"@dev Adds new members to an existing group.\n @param groupId: Id of the group.\n @param identityCommitments: New identity commitments."},"functionSelector":"04245371","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addMembers","nameLocation":"4173:10:0","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"groupId","nameLocation":"4192:7:0","nodeType":"VariableDeclaration","scope":129,"src":"4184:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4184:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"identityCommitments","nameLocation":"4220:19:0","nodeType":"VariableDeclaration","scope":129,"src":"4201:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4201:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":125,"nodeType":"ArrayTypeName","src":"4201:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4183:57:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"4249:0:0"},"scope":160,"src":"4164:86:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4256:491:0","text":"@dev Updates an identity commitment of an existing group. A proof of membership is\n needed to check if the node to be updated is part of the tree.\n @param groupId: Id of the group.\n @param identityCommitment: Existing identity commitment to be updated.\n @param newIdentityCommitment: New identity commitment.\n @param proofSiblings: Array of the sibling nodes of the proof of membership.\n @param proofPathIndices: Path of the proof of membership."},"functionSelector":"ec45622a","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"updateMember","nameLocation":"4761:12:0","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"groupId","nameLocation":"4791:7:0","nodeType":"VariableDeclaration","scope":145,"src":"4783:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4783:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"identityCommitment","nameLocation":"4816:18:0","nodeType":"VariableDeclaration","scope":145,"src":"4808:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4808:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"newIdentityCommitment","nameLocation":"4852:21:0","nodeType":"VariableDeclaration","scope":145,"src":"4844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"proofSiblings","nameLocation":"4902:13:0","nodeType":"VariableDeclaration","scope":145,"src":"4883:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":138,"nodeType":"ArrayTypeName","src":"4883:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"proofPathIndices","nameLocation":"4942:16:0","nodeType":"VariableDeclaration","scope":145,"src":"4925:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"4925:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":141,"nodeType":"ArrayTypeName","src":"4925:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"src":"4773:191:0"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4973:0:0"},"scope":160,"src":"4752:222:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"4980:407:0","text":"@dev Removes a member from an existing group. A proof of membership is\n needed to check if the node to be removed is part of the tree.\n @param groupId: Id of the group.\n @param identityCommitment: Identity commitment to be removed.\n @param proofSiblings: Array of the sibling nodes of the proof of membership.\n @param proofPathIndices: Path of the proof of membership."},"functionSelector":"43989f85","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"removeMember","nameLocation":"5401:12:0","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"groupId","nameLocation":"5431:7:0","nodeType":"VariableDeclaration","scope":159,"src":"5423:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"identityCommitment","nameLocation":"5456:18:0","nodeType":"VariableDeclaration","scope":159,"src":"5448:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"proofSiblings","nameLocation":"5503:13:0","nodeType":"VariableDeclaration","scope":159,"src":"5484:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":152,"nodeType":"ArrayTypeName","src":"5484:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"proofPathIndices","nameLocation":"5543:16:0","nodeType":"VariableDeclaration","scope":159,"src":"5526:33:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":154,"name":"uint8","nodeType":"ElementaryTypeName","src":"5526:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":155,"nodeType":"ArrayTypeName","src":"5526:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"src":"5413:152:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"5574:0:0"},"scope":160,"src":"5392:183:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":161,"src":"96:5481:0","usedErrors":[4,6,8,10,12]}],"src":"31:5547:0"},"id":0},"contracts/SemaphoreIdentity.sol":{"ast":{"absolutePath":"contracts/SemaphoreIdentity.sol","exportedSymbols":{"ISemaphore":[160],"SemaphoreIdentity":[186]},"id":187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":162,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@semaphore-protocol/contracts/interfaces/ISemaphore.sol","file":"@semaphore-protocol/contracts/interfaces/ISemaphore.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":187,"sourceUnit":161,"src":"59:65:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":186,"linearizedBaseContracts":[186],"name":"SemaphoreIdentity","nameLocation":"137:17:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"e21f37ce","id":165,"mutability":"mutable","name":"message","nameLocation":"176:7:1","nodeType":"VariableDeclaration","scope":186,"src":"162:21:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":164,"name":"string","nodeType":"ElementaryTypeName","src":"162:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":174,"nodeType":"Block","src":"244:43:1","statements":[{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":170,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"255:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":171,"name":"initialMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"265:14:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"255:24:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":173,"nodeType":"ExpressionStatement","src":"255:24:1"}]},"functionSelector":"e762c7c6","id":175,"implemented":true,"kind":"function","modifiers":[],"name":"Hello","nameLocation":"201:5:1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"initialMessage","nameLocation":"221:14:1","nodeType":"VariableDeclaration","scope":175,"src":"207:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":166,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"206:30:1"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"244:0:1"},"scope":186,"src":"192:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":184,"nodeType":"Block","src":"348:39:1","statements":[{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":180,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"359:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":181,"name":"newMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"369:10:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"359:20:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":183,"nodeType":"ExpressionStatement","src":"359:20:1"}]},"functionSelector":"368b8772","id":185,"implemented":true,"kind":"function","modifiers":[],"name":"setMessage","nameLocation":"304:10:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"newMessage","nameLocation":"329:10:1","nodeType":"VariableDeclaration","scope":185,"src":"315:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":176,"name":"string","nodeType":"ElementaryTypeName","src":"315:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"314:26:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"348:0:1"},"scope":186,"src":"295:92:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":187,"src":"128:262:1","usedErrors":[]}],"src":"32:360:1"},"id":1}},"contracts":{"@semaphore-protocol/contracts/interfaces/ISemaphore.sol":{"ISemaphore":{"abi":[{"inputs":[],"name":"Semaphore__CallerIsNotTheGroupAdmin","type":"error"},{"inputs":[],"name":"Semaphore__MerkleTreeDepthIsNotSupported","type":"error"},{"inputs":[],"name":"Semaphore__MerkleTreeRootIsExpired","type":"error"},{"inputs":[],"name":"Semaphore__MerkleTreeRootIsNotPartOfTheGroup","type":"error"},{"inputs":[],"name":"Semaphore__YouAreUsingTheSameNillifierTwice","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"groupId","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldAdmin","type":"address"},{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"GroupAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"groupId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldMerkleTreeDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMerkleTreeDuration","type":"uint256"}],"name":"GroupMerkleTreeDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"groupId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"merkleTreeRoot","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"externalNullifier","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nullifierHash","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"signal","type":"uint256"}],"name":"ProofVerified","type":"event"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"identityCommitment","type":"uint256"}],"name":"addMember","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256[]","name":"identityCommitments","type":"uint256[]"}],"name":"addMembers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"depth","type":"uint256"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint256","name":"merkleTreeRootDuration","type":"uint256"}],"name":"createGroup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"depth","type":"uint256"},{"internalType":"address","name":"admin","type":"address"}],"name":"createGroup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"identityCommitment","type":"uint256"},{"internalType":"uint256[]","name":"proofSiblings","type":"uint256[]"},{"internalType":"uint8[]","name":"proofPathIndices","type":"uint8[]"}],"name":"removeMember","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"updateGroupAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"newMerkleTreeDuration","type":"uint256"}],"name":"updateGroupMerkleTreeDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"identityCommitment","type":"uint256"},{"internalType":"uint256","name":"newIdentityCommitment","type":"uint256"},{"internalType":"uint256[]","name":"proofSiblings","type":"uint256[]"},{"internalType":"uint8[]","name":"proofPathIndices","type":"uint8[]"}],"name":"updateMember","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"groupId","type":"uint256"},{"internalType":"uint256","name":"merkleTreeRoot","type":"uint256"},{"internalType":"uint256","name":"signal","type":"uint256"},{"internalType":"uint256","name":"nullifierHash","type":"uint256"},{"internalType":"uint256","name":"externalNullifier","type":"uint256"},{"internalType":"uint256[8]","name":"proof","type":"uint256[8]"}],"name":"verifyProof","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addMember(uint256,uint256)":"1783efc3","addMembers(uint256,uint256[])":"04245371","createGroup(uint256,uint256,address)":"9c112141","createGroup(uint256,uint256,address,uint256)":"65e54f83","removeMember(uint256,uint256,uint256[],uint8[])":"43989f85","updateGroupAdmin(uint256,address)":"568ee826","updateGroupMerkleTreeDuration(uint256,uint256)":"fcf0b6ec","updateMember(uint256,uint256,uint256,uint256[],uint8[])":"ec45622a","verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])":"3bc778e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Semaphore__CallerIsNotTheGroupAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Semaphore__MerkleTreeDepthIsNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Semaphore__MerkleTreeRootIsExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Semaphore__MerkleTreeRootIsNotPartOfTheGroup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Semaphore__YouAreUsingTheSameNillifierTwice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"GroupAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMerkleTreeDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMerkleTreeDuration\",\"type\":\"uint256\"}],\"name\":\"GroupMerkleTreeDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"merkleTreeRoot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"externalNullifier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"}],\"name\":\"ProofVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"identityCommitments\",\"type\":\"uint256[]\"}],\"name\":\"addMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depth\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"merkleTreeRootDuration\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depth\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proofSiblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"proofPathIndices\",\"type\":\"uint8[]\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"updateGroupAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMerkleTreeDuration\",\"type\":\"uint256\"}],\"name\":\"updateGroupMerkleTreeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newIdentityCommitment\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proofSiblings\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"proofPathIndices\",\"type\":\"uint8[]\"}],\"name\":\"updateMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"merkleTreeRoot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"GroupAdminUpdated(uint256,address,address)\":{\"details\":\"Emitted when an admin is assigned to a group.\",\"params\":{\"groupId\":\": Id of the group.\",\"newAdmin\":\": New admin of the group.\",\"oldAdmin\":\": Old admin of the group.\"}},\"GroupMerkleTreeDurationUpdated(uint256,uint256,uint256)\":{\"details\":\"Emitted when the Merkle tree duration of a group is updated.\",\"params\":{\"groupId\":\": Id of the group.\",\"newMerkleTreeDuration\":\": New Merkle tree duration of the group.\",\"oldMerkleTreeDuration\":\": Old Merkle tree duration of the group.\"}},\"ProofVerified(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when a Semaphore proof is verified.\",\"params\":{\"externalNullifier\":\": External nullifier.\",\"groupId\":\": Id of the group.\",\"merkleTreeRoot\":\": Root of the Merkle tree.\",\"nullifierHash\":\": Nullifier hash.\",\"signal\":\": Semaphore signal.\"}}},\"kind\":\"dev\",\"methods\":{\"addMember(uint256,uint256)\":{\"details\":\"Adds a new member to an existing group.\",\"params\":{\"groupId\":\": Id of the group.\",\"identityCommitment\":\": New identity commitment.\"}},\"addMembers(uint256,uint256[])\":{\"details\":\"Adds new members to an existing group.\",\"params\":{\"groupId\":\": Id of the group.\",\"identityCommitments\":\": New identity commitments.\"}},\"createGroup(uint256,uint256,address)\":{\"details\":\"Creates a new group. Only the admin will be able to add or remove members.\",\"params\":{\"admin\":\": Admin of the group.\",\"depth\":\": Depth of the tree.\",\"groupId\":\": Id of the group.\"}},\"createGroup(uint256,uint256,address,uint256)\":{\"details\":\"Creates a new group. Only the admin will be able to add or remove members.\",\"params\":{\"admin\":\": Admin of the group.\",\"depth\":\": Depth of the tree.\",\"groupId\":\": Id of the group.\",\"merkleTreeRootDuration\":\": Time before the validity of a root expires.\"}},\"removeMember(uint256,uint256,uint256[],uint8[])\":{\"details\":\"Removes a member from an existing group. A proof of membership is needed to check if the node to be removed is part of the tree.\",\"params\":{\"groupId\":\": Id of the group.\",\"identityCommitment\":\": Identity commitment to be removed.\",\"proofPathIndices\":\": Path of the proof of membership.\",\"proofSiblings\":\": Array of the sibling nodes of the proof of membership.\"}},\"updateGroupAdmin(uint256,address)\":{\"details\":\"Updates the group admin.\",\"params\":{\"groupId\":\": Id of the group.\",\"newAdmin\":\": New admin of the group.\"}},\"updateGroupMerkleTreeDuration(uint256,uint256)\":{\"details\":\"Updates the group Merkle tree duration.\",\"params\":{\"groupId\":\": Id of the group.\",\"newMerkleTreeDuration\":\": New Merkle tree duration.\"}},\"updateMember(uint256,uint256,uint256,uint256[],uint8[])\":{\"details\":\"Updates an identity commitment of an existing group. A proof of membership is needed to check if the node to be updated is part of the tree.\",\"params\":{\"groupId\":\": Id of the group.\",\"identityCommitment\":\": Existing identity commitment to be updated.\",\"newIdentityCommitment\":\": New identity commitment.\",\"proofPathIndices\":\": Path of the proof of membership.\",\"proofSiblings\":\": Array of the sibling nodes of the proof of membership.\"}},\"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])\":{\"details\":\"Saves the nullifier hash to avoid double signaling and emits an event if the zero-knowledge proof is valid.\",\"params\":{\"externalNullifier\":\": External nullifier.\",\"groupId\":\": Id of the group.\",\"merkleTreeRoot\":\": Root of the Merkle tree.\",\"nullifierHash\":\": Nullifier hash.\",\"proof\":\": Zero-knowledge proof.\",\"signal\":\": Semaphore signal.\"}}},\"title\":\"Semaphore contract interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@semaphore-protocol/contracts/interfaces/ISemaphore.sol\":\"ISemaphore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@semaphore-protocol/contracts/interfaces/ISemaphore.sol\":{\"keccak256\":\"0x345001fdd290dc335ceea6d7c611003f902e20787284aab145a4e38d4e3b74db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a9f4967bee2238ad750473420970fc90dd22b53e7850a3d1d460ff55cb98641\",\"dweb:/ipfs/QmWVvLSU7PafSWH3bKHczGLv5LB8FHNFkRuV9mBv7n3vnv\"]}},\"version\":1}"}},"contracts/SemaphoreIdentity.sol":{"SemaphoreIdentity":{"abi":[{"inputs":[{"internalType":"string","name":"initialMessage","type":"string"}],"name":"Hello","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"message","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"newMessage","type":"string"}],"name":"setMessage","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506104c1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063368b877214610046578063e21f37ce14610062578063e762c7c614610080575b600080fd5b610060600480360381019061005b9190610269565b61009c565b005b61006a6100b6565b60405161007791906102e3565b60405180910390f35b61009a60048036038101906100959190610269565b610144565b005b80600090805190602001906100b292919061015e565b5050565b600080546100c3906103b9565b80601f01602080910402602001604051908101604052809291908181526020018280546100ef906103b9565b801561013c5780601f106101115761010080835404028352916020019161013c565b820191906000526020600020905b81548152906001019060200180831161011f57829003601f168201915b505050505081565b806000908051906020019061015a92919061015e565b5050565b82805461016a906103b9565b90600052602060002090601f01602090048101928261018c57600085556101d3565b82601f106101a557805160ff19168380011785556101d3565b828001600101855582156101d3579182015b828111156101d25782518255916020019190600101906101b7565b5b5090506101e091906101e4565b5090565b5b808211156101fd5760008160009055506001016101e5565b5090565b600061021461020f8461032a565b610305565b90508281526020810184848401111561022c57600080fd5b610237848285610377565b509392505050565b600082601f83011261025057600080fd5b8135610260848260208601610201565b91505092915050565b60006020828403121561027b57600080fd5b600082013567ffffffffffffffff81111561029557600080fd5b6102a18482850161023f565b91505092915050565b60006102b58261035b565b6102bf8185610366565b93506102cf818560208601610386565b6102d88161047a565b840191505092915050565b600060208201905081810360008301526102fd81846102aa565b905092915050565b600061030f610320565b905061031b82826103eb565b919050565b6000604051905090565b600067ffffffffffffffff8211156103455761034461044b565b5b61034e8261047a565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156103a4578082015181840152602081019050610389565b838111156103b3576000848401525b50505050565b600060028204905060018216806103d157607f821691505b602082108114156103e5576103e461041c565b5b50919050565b6103f48261047a565b810181811067ffffffffffffffff821117156104135761041261044b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220fa338274a3ab3545026d71b0ceac5cfe5f3d53459c7b5de52ac1781bb9c7a30f64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x368B8772 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE21F37CE EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xE762C7C6 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB2 SWAP3 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xC3 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF SWAP1 PUSH2 0x3B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x111 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x15A SWAP3 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x16A SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x18C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1E5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214 PUSH2 0x20F DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 DUP5 DUP3 DUP6 PUSH2 0x377 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x260 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP5 DUP3 DUP6 ADD PUSH2 0x23F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x2BF DUP2 DUP6 PUSH2 0x366 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x386 JUMP JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x47A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FD DUP2 DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x320 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP3 DUP3 PUSH2 0x3EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x44B JUMP JUMPDEST JUMPDEST PUSH2 0x34E DUP3 PUSH2 0x47A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x389 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E4 PUSH2 0x41C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x47A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x413 JUMPI PUSH2 0x412 PUSH2 0x44B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL CALLER DUP3 PUSH21 0xA3AB3545026D71B0CEAC5CFE5F3D53459C7B5DE52A 0xC1 PUSH25 0x1BB9C7A30F64736F6C63430008040033000000000000000000 ","sourceMap":"128:262:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4094:2","statements":[{"body":{"nodeType":"YulBlock","src":"91:261:2","statements":[{"nodeType":"YulAssignment","src":"101:75:2","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:2"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:2"},"nodeType":"YulFunctionCall","src":"126:49:2"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:2"},"nodeType":"YulFunctionCall","src":"110:66:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:2"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:2"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:2"},"nodeType":"YulFunctionCall","src":"185:21:2"},"nodeType":"YulExpressionStatement","src":"185:21:2"},{"nodeType":"YulVariableDeclaration","src":"215:27:2","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:2"},"nodeType":"YulFunctionCall","src":"226:16:2"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"289:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"292:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"282:6:2"},"nodeType":"YulFunctionCall","src":"282:12:2"},"nodeType":"YulExpressionStatement","src":"282:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:2"},"nodeType":"YulFunctionCall","src":"257:16:2"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:2"},"nodeType":"YulFunctionCall","src":"254:25:2"},"nodeType":"YulIf","src":"251:2:2"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"329:3:2"},{"name":"dst","nodeType":"YulIdentifier","src":"334:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"339:6:2"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"305:23:2"},"nodeType":"YulFunctionCall","src":"305:41:2"},"nodeType":"YulExpressionStatement","src":"305:41:2"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:2","type":""}],"src":"7:345:2"},{"body":{"nodeType":"YulBlock","src":"434:211:2","statements":[{"body":{"nodeType":"YulBlock","src":"483:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"495:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"485:6:2"},"nodeType":"YulFunctionCall","src":"485:12:2"},"nodeType":"YulExpressionStatement","src":"485:12:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"462:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"470:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:2"},"nodeType":"YulFunctionCall","src":"458:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"477:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"454:3:2"},"nodeType":"YulFunctionCall","src":"454:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"447:6:2"},"nodeType":"YulFunctionCall","src":"447:35:2"},"nodeType":"YulIf","src":"444:2:2"},{"nodeType":"YulVariableDeclaration","src":"508:34:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"535:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"522:12:2"},"nodeType":"YulFunctionCall","src":"522:20:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"512:6:2","type":""}]},{"nodeType":"YulAssignment","src":"551:88:2","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"612:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"620:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:2"},"nodeType":"YulFunctionCall","src":"608:17:2"},{"name":"length","nodeType":"YulIdentifier","src":"627:6:2"},{"name":"end","nodeType":"YulIdentifier","src":"635:3:2"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"560:47:2"},"nodeType":"YulFunctionCall","src":"560:79:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"551:5:2"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"412:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"420:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"428:5:2","type":""}],"src":"372:273:2"},{"body":{"nodeType":"YulBlock","src":"727:299:2","statements":[{"body":{"nodeType":"YulBlock","src":"773:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"782:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"785:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"775:6:2"},"nodeType":"YulFunctionCall","src":"775:12:2"},"nodeType":"YulExpressionStatement","src":"775:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"748:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:2"},"nodeType":"YulFunctionCall","src":"744:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"740:3:2"},"nodeType":"YulFunctionCall","src":"740:32:2"},"nodeType":"YulIf","src":"737:2:2"},{"nodeType":"YulBlock","src":"799:220:2","statements":[{"nodeType":"YulVariableDeclaration","src":"814:45:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"845:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"856:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"841:3:2"},"nodeType":"YulFunctionCall","src":"841:17:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"828:12:2"},"nodeType":"YulFunctionCall","src":"828:31:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"818:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"906:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"915:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"918:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"908:6:2"},"nodeType":"YulFunctionCall","src":"908:12:2"},"nodeType":"YulExpressionStatement","src":"908:12:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"878:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"886:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"875:2:2"},"nodeType":"YulFunctionCall","src":"875:30:2"},"nodeType":"YulIf","src":"872:2:2"},{"nodeType":"YulAssignment","src":"936:73:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"992:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"977:3:2"},"nodeType":"YulFunctionCall","src":"977:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1001:7:2"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"946:30:2"},"nodeType":"YulFunctionCall","src":"946:63:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"936:6:2"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"697:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"708:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"720:6:2","type":""}],"src":"651:375:2"},{"body":{"nodeType":"YulBlock","src":"1124:272:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1134:53:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1181:5:2"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1148:32:2"},"nodeType":"YulFunctionCall","src":"1148:39:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1138:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1196:78:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1262:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"1267:6:2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1203:58:2"},"nodeType":"YulFunctionCall","src":"1203:71:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1196:3:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1309:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"1316:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1305:3:2"},"nodeType":"YulFunctionCall","src":"1305:16:2"},{"name":"pos","nodeType":"YulIdentifier","src":"1323:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"1328:6:2"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1283:21:2"},"nodeType":"YulFunctionCall","src":"1283:52:2"},"nodeType":"YulExpressionStatement","src":"1283:52:2"},{"nodeType":"YulAssignment","src":"1344:46:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1382:6:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1360:21:2"},"nodeType":"YulFunctionCall","src":"1360:29:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:2"},"nodeType":"YulFunctionCall","src":"1351:39:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1344:3:2"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1105:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1112:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1120:3:2","type":""}],"src":"1032:364:2"},{"body":{"nodeType":"YulBlock","src":"1520:195:2","statements":[{"nodeType":"YulAssignment","src":"1530:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1542:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:2"},"nodeType":"YulFunctionCall","src":"1538:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1577:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1588:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:2"},"nodeType":"YulFunctionCall","src":"1573:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1596:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1602:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1592:3:2"},"nodeType":"YulFunctionCall","src":"1592:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1566:6:2"},"nodeType":"YulFunctionCall","src":"1566:47:2"},"nodeType":"YulExpressionStatement","src":"1566:47:2"},{"nodeType":"YulAssignment","src":"1622:86:2","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1694:6:2"},{"name":"tail","nodeType":"YulIdentifier","src":"1703:4:2"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1630:63:2"},"nodeType":"YulFunctionCall","src":"1630:78:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1622:4:2"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1492:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1504:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1515:4:2","type":""}],"src":"1402:313:2"},{"body":{"nodeType":"YulBlock","src":"1762:88:2","statements":[{"nodeType":"YulAssignment","src":"1772:30:2","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1782:18:2"},"nodeType":"YulFunctionCall","src":"1782:20:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1772:6:2"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:2"},{"name":"size","nodeType":"YulIdentifier","src":"1839:4:2"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1811:19:2"},"nodeType":"YulFunctionCall","src":"1811:33:2"},"nodeType":"YulExpressionStatement","src":"1811:33:2"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1746:4:2","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1755:6:2","type":""}],"src":"1721:129:2"},{"body":{"nodeType":"YulBlock","src":"1896:35:2","statements":[{"nodeType":"YulAssignment","src":"1906:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1922:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1916:5:2"},"nodeType":"YulFunctionCall","src":"1916:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1906:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1889:6:2","type":""}],"src":"1856:75:2"},{"body":{"nodeType":"YulBlock","src":"2004:241:2","statements":[{"body":{"nodeType":"YulBlock","src":"2109:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2111:16:2"},"nodeType":"YulFunctionCall","src":"2111:18:2"},"nodeType":"YulExpressionStatement","src":"2111:18:2"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2081:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2089:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2078:2:2"},"nodeType":"YulFunctionCall","src":"2078:30:2"},"nodeType":"YulIf","src":"2075:2:2"},{"nodeType":"YulAssignment","src":"2141:37:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2171:6:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2149:21:2"},"nodeType":"YulFunctionCall","src":"2149:29:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2141:4:2"}]},{"nodeType":"YulAssignment","src":"2215:23:2","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2227:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"2233:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2223:3:2"},"nodeType":"YulFunctionCall","src":"2223:15:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2215:4:2"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1988:6:2","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1999:4:2","type":""}],"src":"1937:308:2"},{"body":{"nodeType":"YulBlock","src":"2310:40:2","statements":[{"nodeType":"YulAssignment","src":"2321:22:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2337:5:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2331:5:2"},"nodeType":"YulFunctionCall","src":"2331:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2321:6:2"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2293:5:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2303:6:2","type":""}],"src":"2251:99:2"},{"body":{"nodeType":"YulBlock","src":"2452:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2469:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2474:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:2"},"nodeType":"YulFunctionCall","src":"2462:19:2"},"nodeType":"YulExpressionStatement","src":"2462:19:2"},{"nodeType":"YulAssignment","src":"2490:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2509:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"2514:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2505:3:2"},"nodeType":"YulFunctionCall","src":"2505:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2490:11:2"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2424:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"2429:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2440:11:2","type":""}],"src":"2356:169:2"},{"body":{"nodeType":"YulBlock","src":"2582:103:2","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2605:3:2"},{"name":"src","nodeType":"YulIdentifier","src":"2610:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2615:6:2"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2592:12:2"},"nodeType":"YulFunctionCall","src":"2592:30:2"},"nodeType":"YulExpressionStatement","src":"2592:30:2"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2663:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2668:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2659:3:2"},"nodeType":"YulFunctionCall","src":"2659:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"2677:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2652:6:2"},"nodeType":"YulFunctionCall","src":"2652:27:2"},"nodeType":"YulExpressionStatement","src":"2652:27:2"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2564:3:2","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2569:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"2574:6:2","type":""}],"src":"2531:154:2"},{"body":{"nodeType":"YulBlock","src":"2740:258:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2750:10:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2759:1:2","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2754:1:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2819:63:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2844:3:2"},{"name":"i","nodeType":"YulIdentifier","src":"2849:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:2"},"nodeType":"YulFunctionCall","src":"2840:11:2"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2863:3:2"},{"name":"i","nodeType":"YulIdentifier","src":"2868:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2859:3:2"},"nodeType":"YulFunctionCall","src":"2859:11:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2853:5:2"},"nodeType":"YulFunctionCall","src":"2853:18:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2833:6:2"},"nodeType":"YulFunctionCall","src":"2833:39:2"},"nodeType":"YulExpressionStatement","src":"2833:39:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2780:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"2783:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2777:2:2"},"nodeType":"YulFunctionCall","src":"2777:13:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2791:19:2","statements":[{"nodeType":"YulAssignment","src":"2793:15:2","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2802:1:2"},{"kind":"number","nodeType":"YulLiteral","src":"2805:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2798:3:2"},"nodeType":"YulFunctionCall","src":"2798:10:2"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2793:1:2"}]}]},"pre":{"nodeType":"YulBlock","src":"2773:3:2","statements":[]},"src":"2769:113:2"},{"body":{"nodeType":"YulBlock","src":"2916:76:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2966:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"2971:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2962:3:2"},"nodeType":"YulFunctionCall","src":"2962:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2955:6:2"},"nodeType":"YulFunctionCall","src":"2955:27:2"},"nodeType":"YulExpressionStatement","src":"2955:27:2"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2897:1:2"},{"name":"length","nodeType":"YulIdentifier","src":"2900:6:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2894:2:2"},"nodeType":"YulFunctionCall","src":"2894:13:2"},"nodeType":"YulIf","src":"2891:2:2"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2722:3:2","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2727:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"2732:6:2","type":""}],"src":"2691:307:2"},{"body":{"nodeType":"YulBlock","src":"3055:269:2","statements":[{"nodeType":"YulAssignment","src":"3065:22:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3079:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"3085:1:2","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3075:3:2"},"nodeType":"YulFunctionCall","src":"3075:12:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3065:6:2"}]},{"nodeType":"YulVariableDeclaration","src":"3096:38:2","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3126:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"3132:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3122:3:2"},"nodeType":"YulFunctionCall","src":"3122:12:2"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3100:18:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3173:51:2","statements":[{"nodeType":"YulAssignment","src":"3187:27:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3201:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3209:4:2","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3197:3:2"},"nodeType":"YulFunctionCall","src":"3197:17:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3187:6:2"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3153:18:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3146:6:2"},"nodeType":"YulFunctionCall","src":"3146:26:2"},"nodeType":"YulIf","src":"3143:2:2"},{"body":{"nodeType":"YulBlock","src":"3276:42:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3290:16:2"},"nodeType":"YulFunctionCall","src":"3290:18:2"},"nodeType":"YulExpressionStatement","src":"3290:18:2"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3240:18:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3263:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3271:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3260:2:2"},"nodeType":"YulFunctionCall","src":"3260:14:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3237:2:2"},"nodeType":"YulFunctionCall","src":"3237:38:2"},"nodeType":"YulIf","src":"3234:2:2"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3039:4:2","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3048:6:2","type":""}],"src":"3004:320:2"},{"body":{"nodeType":"YulBlock","src":"3373:238:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:58:2","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3405:6:2"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3435:4:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3413:21:2"},"nodeType":"YulFunctionCall","src":"3413:27:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3401:3:2"},"nodeType":"YulFunctionCall","src":"3401:40:2"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3387:10:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3552:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3554:16:2"},"nodeType":"YulFunctionCall","src":"3554:18:2"},"nodeType":"YulExpressionStatement","src":"3554:18:2"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3495:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"3507:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3492:2:2"},"nodeType":"YulFunctionCall","src":"3492:34:2"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3531:10:2"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3543:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3528:2:2"},"nodeType":"YulFunctionCall","src":"3528:22:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3489:2:2"},"nodeType":"YulFunctionCall","src":"3489:62:2"},"nodeType":"YulIf","src":"3486:2:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3590:2:2","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3594:10:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:2"},"nodeType":"YulFunctionCall","src":"3583:22:2"},"nodeType":"YulExpressionStatement","src":"3583:22:2"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3359:6:2","type":""},{"name":"size","nodeType":"YulTypedName","src":"3367:4:2","type":""}],"src":"3330:281:2"},{"body":{"nodeType":"YulBlock","src":"3645:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3662:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3665:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3655:6:2"},"nodeType":"YulFunctionCall","src":"3655:88:2"},"nodeType":"YulExpressionStatement","src":"3655:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3759:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3762:4:2","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3752:6:2"},"nodeType":"YulFunctionCall","src":"3752:15:2"},"nodeType":"YulExpressionStatement","src":"3752:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3776:6:2"},"nodeType":"YulFunctionCall","src":"3776:15:2"},"nodeType":"YulExpressionStatement","src":"3776:15:2"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3617:180:2"},{"body":{"nodeType":"YulBlock","src":"3831:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3841:6:2"},"nodeType":"YulFunctionCall","src":"3841:88:2"},"nodeType":"YulExpressionStatement","src":"3841:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3945:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3948:4:2","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3938:6:2"},"nodeType":"YulFunctionCall","src":"3938:15:2"},"nodeType":"YulExpressionStatement","src":"3938:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3969:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3972:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3962:6:2"},"nodeType":"YulFunctionCall","src":"3962:15:2"},"nodeType":"YulExpressionStatement","src":"3962:15:2"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3803:180:2"},{"body":{"nodeType":"YulBlock","src":"4037:54:2","statements":[{"nodeType":"YulAssignment","src":"4047:38:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4065:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4072:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4061:3:2"},"nodeType":"YulFunctionCall","src":"4061:14:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4081:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4077:3:2"},"nodeType":"YulFunctionCall","src":"4077:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4057:3:2"},"nodeType":"YulFunctionCall","src":"4057:28:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4047:6:2"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4020:5:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4030:6:2","type":""}],"src":"3989:102:2"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063368b877214610046578063e21f37ce14610062578063e762c7c614610080575b600080fd5b610060600480360381019061005b9190610269565b61009c565b005b61006a6100b6565b60405161007791906102e3565b60405180910390f35b61009a60048036038101906100959190610269565b610144565b005b80600090805190602001906100b292919061015e565b5050565b600080546100c3906103b9565b80601f01602080910402602001604051908101604052809291908181526020018280546100ef906103b9565b801561013c5780601f106101115761010080835404028352916020019161013c565b820191906000526020600020905b81548152906001019060200180831161011f57829003601f168201915b505050505081565b806000908051906020019061015a92919061015e565b5050565b82805461016a906103b9565b90600052602060002090601f01602090048101928261018c57600085556101d3565b82601f106101a557805160ff19168380011785556101d3565b828001600101855582156101d3579182015b828111156101d25782518255916020019190600101906101b7565b5b5090506101e091906101e4565b5090565b5b808211156101fd5760008160009055506001016101e5565b5090565b600061021461020f8461032a565b610305565b90508281526020810184848401111561022c57600080fd5b610237848285610377565b509392505050565b600082601f83011261025057600080fd5b8135610260848260208601610201565b91505092915050565b60006020828403121561027b57600080fd5b600082013567ffffffffffffffff81111561029557600080fd5b6102a18482850161023f565b91505092915050565b60006102b58261035b565b6102bf8185610366565b93506102cf818560208601610386565b6102d88161047a565b840191505092915050565b600060208201905081810360008301526102fd81846102aa565b905092915050565b600061030f610320565b905061031b82826103eb565b919050565b6000604051905090565b600067ffffffffffffffff8211156103455761034461044b565b5b61034e8261047a565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156103a4578082015181840152602081019050610389565b838111156103b3576000848401525b50505050565b600060028204905060018216806103d157607f821691505b602082108114156103e5576103e461041c565b5b50919050565b6103f48261047a565b810181811067ffffffffffffffff821117156104135761041261044b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220fa338274a3ab3545026d71b0ceac5cfe5f3d53459c7b5de52ac1781bb9c7a30f64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x368B8772 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE21F37CE EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xE762C7C6 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB2 SWAP3 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xC3 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF SWAP1 PUSH2 0x3B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x111 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x15A SWAP3 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x16A SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x18C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1E5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214 PUSH2 0x20F DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 DUP5 DUP3 DUP6 PUSH2 0x377 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x260 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP5 DUP3 DUP6 ADD PUSH2 0x23F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP3 PUSH2 0x35B JUMP JUMPDEST PUSH2 0x2BF DUP2 DUP6 PUSH2 0x366 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x386 JUMP JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x47A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FD DUP2 DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x320 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP3 DUP3 PUSH2 0x3EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x44B JUMP JUMPDEST JUMPDEST PUSH2 0x34E DUP3 PUSH2 0x47A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x389 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E4 PUSH2 0x41C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP3 PUSH2 0x47A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x413 JUMPI PUSH2 0x412 PUSH2 0x44B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL CALLER DUP3 PUSH21 0xA3AB3545026D71B0CEAC5CFE5F3D53459C7B5DE52A 0xC1 PUSH25 0x1BB9C7A30F64736F6C63430008040033000000000000000000 ","sourceMap":"128:262:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;162:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;192:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;295:92;369:10;359:7;:20;;;;;;;;;;;;:::i;:::-;;295:92;:::o;162:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;192:95::-;265:14;255:7;:24;;;;;;;;;;;;:::i;:::-;;192:95;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:2:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;428:5;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;651:375::-;720:6;769:2;757:9;748:7;744:23;740:32;737:2;;;785:1;782;775:12;737:2;856:1;845:9;841:17;828:31;886:18;878:6;875:30;872:2;;;918:1;915;908:12;872:2;946:63;1001:7;992:6;981:9;977:22;946:63;:::i;:::-;936:73;;799:220;727:299;;;;:::o;1032:364::-;1120:3;1148:39;1181:5;1148:39;:::i;:::-;1203:71;1267:6;1262:3;1203:71;:::i;:::-;1196:78;;1283:52;1328:6;1323:3;1316:4;1309:5;1305:16;1283:52;:::i;:::-;1360:29;1382:6;1360:29;:::i;:::-;1355:3;1351:39;1344:46;;1124:272;;;;;:::o;1402:313::-;1515:4;1553:2;1542:9;1538:18;1530:26;;1602:9;1596:4;1592:20;1588:1;1577:9;1573:17;1566:47;1630:78;1703:4;1694:6;1630:78;:::i;:::-;1622:86;;1520:195;;;;:::o;1721:129::-;1755:6;1782:20;;:::i;:::-;1772:30;;1811:33;1839:4;1831:6;1811:33;:::i;:::-;1762:88;;;:::o;1856:75::-;1889:6;1922:2;1916:9;1906:19;;1896:35;:::o;1937:308::-;1999:4;2089:18;2081:6;2078:30;2075:2;;;2111:18;;:::i;:::-;2075:2;2149:29;2171:6;2149:29;:::i;:::-;2141:37;;2233:4;2227;2223:15;2215:23;;2004:241;;;:::o;2251:99::-;2303:6;2337:5;2331:12;2321:22;;2310:40;;;:::o;2356:169::-;2440:11;2474:6;2469:3;2462:19;2514:4;2509:3;2505:14;2490:29;;2452:73;;;;:::o;2531:154::-;2615:6;2610:3;2605;2592:30;2677:1;2668:6;2663:3;2659:16;2652:27;2582:103;;;:::o;2691:307::-;2759:1;2769:113;2783:6;2780:1;2777:13;2769:113;;;2868:1;2863:3;2859:11;2853:18;2849:1;2844:3;2840:11;2833:39;2805:2;2802:1;2798:10;2793:15;;2769:113;;;2900:6;2897:1;2894:13;2891:2;;;2980:1;2971:6;2966:3;2962:16;2955:27;2891:2;2740:258;;;;:::o;3004:320::-;3048:6;3085:1;3079:4;3075:12;3065:22;;3132:1;3126:4;3122:12;3153:18;3143:2;;3209:4;3201:6;3197:17;3187:27;;3143:2;3271;3263:6;3260:14;3240:18;3237:38;3234:2;;;3290:18;;:::i;:::-;3234:2;3055:269;;;;:::o;3330:281::-;3413:27;3435:4;3413:27;:::i;:::-;3405:6;3401:40;3543:6;3531:10;3528:22;3507:18;3495:10;3492:34;3489:62;3486:2;;;3554:18;;:::i;:::-;3486:2;3594:10;3590:2;3583:22;3373:238;;;:::o;3617:180::-;3665:77;3662:1;3655:88;3762:4;3759:1;3752:15;3786:4;3783:1;3776:15;3803:180;3851:77;3848:1;3841:88;3948:4;3945:1;3938:15;3972:4;3969:1;3962:15;3989:102;4030:6;4081:2;4077:7;4072:2;4065:5;4061:14;4057:28;4047:38;;4037:54;;;:::o"},"methodIdentifiers":{"Hello(string)":"e762c7c6","message()":"e21f37ce","setMessage(string)":"368b8772"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"initialMessage\",\"type\":\"string\"}],\"name\":\"Hello\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"message\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMessage\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SemaphoreIdentity.sol\":\"SemaphoreIdentity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@semaphore-protocol/contracts/interfaces/ISemaphore.sol\":{\"keccak256\":\"0x345001fdd290dc335ceea6d7c611003f902e20787284aab145a4e38d4e3b74db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a9f4967bee2238ad750473420970fc90dd22b53e7850a3d1d460ff55cb98641\",\"dweb:/ipfs/QmWVvLSU7PafSWH3bKHczGLv5LB8FHNFkRuV9mBv7n3vnv\"]},\"contracts/SemaphoreIdentity.sol\":{\"keccak256\":\"0x68adda402e20d323afe9da7e0669ffc003fa8d1c82730184ef2b82e1a03e5ae5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83e73b591e083ca3eb37933aa00d85cb58dbd017f68067fdb03cd2acacc9e48d\",\"dweb:/ipfs/QmebzChjVqy1aAJfUX6QfrvRiYCwYfM38iysi6DRv9ny3q\"]}},\"version\":1}"}}}}}